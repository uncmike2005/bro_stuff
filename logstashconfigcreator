#!/bin/bash

TSTAMP=$(date +%s)
CONF="/tmp/logstash-$TSTAMP.conf"
PATTERNS="/tmp/bro_patterns_$TSTAMP"
cd /opt/nsm/bro/logs/current
echo `pwd`
for j in `ls -I "*17*" *.log`; do
  echo $j  
  LOG=$(echo $j | sed 's/.log//g')
  FILTNAME=$(echo $LOG | tr '[:lower:]' '[:upper:]')
#  echo -e "BRO$FILTNAME \c" >> $PATTERNS
  for i in $(grep -E "^#fields" $LOG.log | sed 's/\./_/g' | sed 's/^#fields\t//g'); do echo -e "(?<$i>(.*?))\\\0134\\\0164\c"; done | sed 's/\\\0134\\\0164$//g' > $PATTERNS
  THISPATTERN=$(cat $PATTERNS)
  echo "
input {
  file {
    path => [ \"$PWD/$j\" ] # array (required)
    type => \"bro_$LOG\" # string (optional)
  }
}
" > /etc/logstash/conf.d/$LOG.conf

  echo "
filter{

if ([message] =~ /192.168.11.222/) {
        drop{}
    }
if [type] == \"bro_$LOG\" {
 grok {
    break_on_match => false
    match => { "message" => \"$THISPATTERN\"}
    add_tag => \"bro$LOG\"
     }
if (\"\" in [id_orig_h]) {
   mutate{
    add_field => { \"origHost\" => \"%{id_orig_h}\" }
    add_field => { \"respHost\" => \"%{id_resp_h}\" }
    }
 dns{
   reverse => [ \"origHost\" ]
   action => [ \"replace\" ]
    }
 dns{
   reverse => [ \"respHost\" ]
   action => [ \"replace\" ]
    }
  }
 }
}
" >> /etc/logstash/conf.d/$LOG.conf
sed -i 's@\\0134\\0164@\t@g' /etc/logstash/conf.d/$LOG.conf

done
rm $CONF
rm $PATTERNS
service logstash stop
sleep 10  
service logstash start
exit 0
